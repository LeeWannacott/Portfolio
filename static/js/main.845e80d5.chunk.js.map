{"version":3,"sources":["logo.svg","layout/Projects.js","layout/Home.js","layout/table-sort.js","layout/GitHub.js","layout/Contact.js","layout/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","className","href","src","style","width","onClick","Component","Home","columnData","dictOfColumnIndexAndTableRow","document","addEventListener","e","console","log","getElementsByTagName","sortableTable","tableHead","querySelector","tableBody","tableHeadHeaders","querySelectorAll","entries","columnIndex","th","timesClickedColumn","tableRows","i","tr","item","innerHTML","push","naturalSortAescending","a","b","localeCompare","navigator","languages","language","numeric","ignorePunctuation","naturalSortDescending","search","sort","getTableDataOnClick","length","sortingFunction","Github","state","repos","loading","data","user","stars","this","setState","axios","get","process","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","then","res","html_url","avatar_url","textAlign","marginLeft","marginTop","marginRight","following","followers","public_repos","alt","alignContent","map","repo","name","created_at","split","description","forks","open_issues","watchers","stargazers_count","Math","round","size","Contact","NavBar","backgroundColor","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Nav","Link","as","to","exact","path","component","GitHub","App","Boolean","window","location","hostname","match","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.845e80d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport './Projects.css'\r\n\r\nexport class Projects extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n\r\n                <h2 className=\"display-4\">Tweet Repair Game.\r\n                <a href='https://tweet-repair-game.herokuapp.com/'><button className='btn btn-light'>View Live Example.</button></a>\r\n                    <a href='https://github.com/LeeWannacott/tweet-repair-game-django'><button className='btn btn-light'>View GitHub Page.</button></a>\r\n                </h2>\r\n                <hr></hr>\r\n                <p>Tweet repair game started during Global Game Jam 2020. Uses Django, Javascript and the Twitter API.</p>\r\n                <img src='https://raw.githubusercontent.com/LeeWannacott/tweet-repair-game-django/master/Picture_of_tweet_repair_game.png' style={{ width: '70em' }} className='projectimages'></img>\r\n\r\n                <h2 className=\"display-4\">Image Selector.\r\n                <a href='https://github.com/LeeWannacott/image-selector-opencv-python/blob/master/image_selector_from_video.py'><button className='btn btn-light' onClick=\"www.google.com\">View Source Code.</button></a>\r\n                    <a href='https://github.com/LeeWannacott/image-selector-opencv-python'><button className='btn btn-light' onClick=\"window.location.href='www.google.com'\">View Github Page.</button></a>\r\n                </h2>\r\n                <hr></hr>\r\n                <p>Speeds up image selection, tagging and bounding boxing of relevant images to then use in machine learning models.</p>\r\n                <img src='https://raw.githubusercontent.com/LeeWannacott/image-selector-opencv-python/master/Example_of_use.png' style={{ width: '70em' }} className='projectimages'></img>\r\n\r\n\r\n                <h2 className=\"display-4\">Mark-Your-Spreadsheet.\r\n                <a href='https://github.com/LeeWannacott/MYS-Mark-Your-Spreadsheet'><button className='btn btn-light'>View GitHub Page.</button></a>\r\n                </h2>\r\n                <hr></hr>\r\n                <p>Software that applies conditional highlighting and grades students Excel spreadsheets. </p>\r\n                <img src='https://raw.githubusercontent.com/LeeWannacott/MYS-Mark-Your-Spreadsheet/master/CompareAllExample.png' style={{ width: '70em' }} className='projectimages'></img>\r\n\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects\r\n","import React, { Component } from \"react\";\r\nimport Projects from \"./Projects\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Projects />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","const columnData = [];\r\nconst dictOfColumnIndexAndTableRow = {\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function (e) {\r\n    console.log('dom loaded')\r\nfor (let sortableTable of document.getElementsByTagName('table')) {\r\n    if (sortableTable.className === 'table-sort') {\r\n        console.log('table-sort')\r\n    if (!sortableTable.getElementsByTagName('thead')) {\r\n        console.log('<thead> Tag does not exist in table');\r\n    }\r\n    else if (!sortableTable.getElementsByTagName('tbody')) {\r\n        console.log('<tbody> Tag does not exist in table');\r\n    }\r\n    else {\r\n        const tableHead = sortableTable.querySelector('thead')\r\n        const tableBody = sortableTable.querySelector('tbody')\r\n        const tableHeadHeaders = tableHead.querySelectorAll('th')\r\n        \r\n        for (let [columnIndex, th] of tableHeadHeaders.entries('table')) {\r\n            console.log('th')\r\n        let timesClickedColumn = 0\r\n        th.addEventListener(\"click\", function () {\r\n            timesClickedColumn += 1\r\n            console.log('clicked')\r\n            function getTableDataOnClick() {\r\n            const tableRows = tableBody.querySelectorAll('tr');\r\n            for (let [i, tr] of tableRows.entries()) {\r\n                if (tr.querySelectorAll('td').item(columnIndex).innerHTML !== ''){\r\n                columnData.push(tr.querySelectorAll('td').item(columnIndex).innerHTML+'#'+i)\r\n                dictOfColumnIndexAndTableRow[tr.querySelectorAll('td').item(columnIndex).innerHTML+'#'+i] = tr.innerHTML\r\n                } else{\r\n                // Fill in blank table cells with a value(0), so they can be sorted.\r\n                columnData.push('0#'+i)\r\n                dictOfColumnIndexAndTableRow['0#'+i] = tr.innerHTML\r\n                console.log(dictOfColumnIndexAndTableRow)\r\n                }\r\n            }\r\n\r\n            function naturalSortAescending(a,b){\r\n                console.log('sort1')\r\n                return a.localeCompare(b, navigator.languages[0] || navigator.language,\r\n                    {numeric: true, ignorePunctuation: true})\r\n            }\r\n            function naturalSortDescending(a,b){\r\n                console.log('sort2')\r\n                return naturalSortAescending(b,a)\r\n            }\r\n            // Sort naturally; default aescending unless th is using 'order-by-desc' as className.\r\n            console.log(columnData[0])\r\n            //[^A-Za-z0-9\\s]\r\n\r\n            if (columnData[0].search(/[^A-Za-z0-9\\s\\-]/)) {\r\n                console.log('test1')\r\n                if (th.className === 'order-by-desc' && timesClickedColumn === 1){\r\n                columnData.sort(naturalSortDescending,{numeric: true, ignorePunctuation: true})\r\n                }else if(th.className === 'order-by-desc' && timesClickedColumn === 2){\r\n                columnData.sort(naturalSortAescending,{numeric: true, ignorePunctuation: true})\r\n                    timesClickedColumn = 0\r\n                }\r\n            else if (timesClickedColumn === 1){   \r\n                console.log('1')  \r\n                columnData.sort(naturalSortAescending)         \r\n            } else if (timesClickedColumn === 2){\r\n                \r\n                columnData.sort(naturalSortDescending)\r\n                timesClickedColumn = 0\r\n                } \r\n            }\r\n            }\r\n            getTableDataOnClick();\r\n            function sortingFunction() {\r\n            const tableRows = tableBody.querySelectorAll('tr');\r\n            for (let [i, tr] of tableRows.entries()) {\r\n           \r\n                tr.innerHTML = dictOfColumnIndexAndTableRow[columnData[i]]\r\n            }\r\n            columnData.length = 0\r\n            }\r\n            sortingFunction()\r\n        });\r\n        }\r\n    }\r\n    }\r\n}\r\n})","import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { isCompositeComponent } from 'react-dom/test-utils'\r\nimport './GitHub.css';\r\nimport $ from 'jquery';\r\n// import Sort from './table-sort';\r\nimport './table-sort'\r\n\r\nexport class Github extends Component {\r\n    state = {\r\n        repos: [],\r\n        loading: false,\r\n        data: false,\r\n        user: [],\r\n        stars: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const script = document.createElement(\"script\");\r\n        // script.src = \"https://leewannacott.github.io/table-sort-js/#/.js\";\r\n        // script.async = true;\r\n        // script.type = \"application/javascript\";\r\n\r\n        \r\n        // document.body.appendChild(script);\r\n\r\n        this.setState({ loading: true })\r\n        axios.get(`https://api.github.com/users/leewannacott/repos?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\r\n            .then(res => {\r\n                const repos = res.data;\r\n                this.setState({ repos })\r\n            });\r\n        axios.get(`https://api.github.com/users/leewannacott?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\r\n            .then(res => {\r\n                const user = res.data;\r\n                this.setState({ user })\r\n            });\r\n        axios.get(`https://api.github.com/users/leewannacott/starred?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\r\n            .then(res => {\r\n                const stars = res.data;\r\n                this.setState({ stars })\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className='container' >\r\n\r\n\r\n                { console.log(this.state.stars.length)}\r\n                < div className=\"bioInfo\" >\r\n                    <a href={this.state.user.html_url} className='GitHubIcon'><img src={this.state.user.avatar_url} className='GitHubIcon'></img></a>\r\n                    <span style={{ textAlign: 'left', marginLeft: '1em', marginTop: ' 0.5em', marginRight: '1em' }}>\r\n                        <p>\r\n                            {\"Following: \" + this.state.user.following + \" \"}<br />\r\n                            {\"Followers: \" + this.state.user.followers + \" \"}<br />\r\n                            {\"Repositories: \" + this.state.user.public_repos}<br />\r\n                            {\"Stars: \" + this.state.stars.length + \" \"}</p></span>\r\n                    <img src=\"http://ghchart.rshah.org/be4eb9/LeeWannacott\" className=\"GitHubChart\" alt=\"Lee Wannacott GitHub chart\"></img>\r\n                    <a href=\"#\"><img src=\"https://media.xconomy.com/wordpress/wp-content/images/2016/06/06161811/github-logo.jpg\" alt=\"GitHub Icon\" style={{ width: \"8em\", marginTop: '1em', marginLeft: '1em', alignContent: 'flex-end' }} ></img></a>\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <h6 style={{ textAlign: 'left', marginTop: '0.25em' }}>Statistics on public repositories pulled from the GitHub API v3:</h6>\r\n\r\n                <table className=\"table-sort\">\r\n                    <thead>\r\n                        <tr><th>Repository Name</th>\r\n                            <th>Language</th>\r\n                            <th>Created</th>\r\n                            <th>Description</th>\r\n                            <th>Forks</th>\r\n                            <th>Open issues</th>\r\n                            <th>Watchers</th>\r\n                            <th>Stars</th>\r\n                            <th>Size (MB)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.repos.map(repo => (\r\n\r\n                                <tr>\r\n                                    <td><a href={repo.html_url}>{repo.name}</a></td>\r\n                                    <td>    {repo.language}</td>\r\n                                    <td>    {repo.created_at.split('-')[0] + '-' + repo.created_at.split('-')[1]}</td>\r\n                                    <td>    {repo.description}</td>\r\n                                    <td>    {repo.forks}</td>\r\n                                    <td>    {repo.open_issues}</td>\r\n                                    <td>    {repo.watchers}</td>\r\n                                    <td>    {repo.stargazers_count}</td>\r\n                                    <td>    {(Math.round(repo.size / 1000))}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Github\r\n\r\n","import React, { Component } from 'react'\r\nimport './Contact.css'\r\nimport axios from 'axios';\r\n\r\n\r\nexport class Contact extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         name: '',\r\n    //         email: '',\r\n    //         message: ''\r\n    //     }\r\n    // }\r\n\r\n    // handleSubmit(e) {\r\n    //     e.preventDefault();\r\n    //     axios({\r\n    //         method: \"POST\",\r\n    //         url: \"http://localhost:3002/send\",\r\n    //         data: this.state\r\n    //     }).then((response) => {\r\n    //         if (response.data.status === 'success') {\r\n    //             alert(\"Message Sent.\");\r\n    //             this.resetForm()\r\n    //         } else if (response.data.status === 'fail') {\r\n    //             alert(\"Message failed to send.\")\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // resetForm() {\r\n    //     this.setState({ name: '', email: '', message: '' })\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <h6 className='heading'>Email: WannacottL@gmail.com</h6>\r\n                <hr></hr>\r\n                <a href=\"https://www.linkedin.com/in/lee-wannacott-64289b174/\" ><img src=\"https://cdn.fastly.picmonkey.com/content4/previews/icons_linkedin/icons_linkedin_11_550.png\" className=\"hover-images\" alt=\"https://www.linkedin.com/in/lee-wannacott-64289b174/\" style={{ width: \"5em\", marginTop: '0.25em', marginLeft: '1em' }} ></img></a>\r\n                <a href=\"https://github.com/LeeWannacott\" ><img src=\"https://miro.medium.com/max/796/1*WY7ELhXIVxbGlUwmhA1PSw.jpeg\" className='hover-images' alt=\"https://github.com/LeeWannacott\" style={{ width: \"10em\", marginTop: '0.25em', marginLeft: '1em' }} ></img></a>\r\n                <a href=\"mailto:WannacottL@gmail.com\" ><img src=\"https://lh3.googleusercontent.com/qTG9HMCp-s_aubJGeQWkR6M_myn-aXDJnraWn9oePcY1dGbYqXibaeLQBAeMdmxSBus=s180\" className=\"hover-images\" alt=\"mailto:WannacottL@gmail.com\" ></img></a>\r\n                {/* \r\n                <h2 className='heading'>Contact via form:</h2><hr></hr>\r\n\r\n\r\n                <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // onNameChange(event) {\r\n    //     this.setState({ name: event.target.value })\r\n    // }\r\n\r\n    // onEmailChange(event) {\r\n    //     this.setState({ email: event.target.value })\r\n    // }\r\n\r\n    // onMessageChange(event) {\r\n    //     this.setState({ message: event.target.value })\r\n    // }\r\n\r\n    // handleSubmit(event) {\r\n    // }\r\n}\r\n\r\n\r\nexport default Contact\r\n\r\n\r\n","import React, { Component, useCallback } from 'react'\r\nimport { Link, Route, NavLink, Switch, match } from 'react-router-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\nimport './Navbar.css';\r\nimport Home from './Home'\r\nimport Projects from './Projects';\r\nimport GitHub from './GitHub';\r\nimport Contact from './Contact'\r\n\r\nexport class NavBar extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-light navbar-expand-xl\" style={{ backgroundColor: \"#e3f2fd\" }}>\r\n\r\n            <a className=\"navbar-brand\">Lee Wannacott</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav\">\r\n                {/* Navbar items */}\r\n                <li className=\"nav-item\"><Nav.Link className='Nav-link' as={Link} to=\"/Projects\">\r\n                  Projects\r\n              </Nav.Link></li>\r\n                <li className=\"nav-item\"><Nav.Link className='Nav-link' as={Link} to=\"/GitHub\">\r\n                  Github Statistics\r\n              </Nav.Link></li>\r\n                <li className=\"nav-item\"><Nav.Link className='Nav-link' as={Link} to=\"/Contact\">\r\n                  Contact\r\n              </Nav.Link></li>\r\n\r\n                <img src='https://cdn.auth0.com/blog/react-js/react.png' className='react-spinner' style={{ width: '3em', marginLeft: '34em' }}></img>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        {/* Routing */}\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/Projects\" component={Projects} />\r\n            <Route path=\"/GitHub\" component={GitHub} />\r\n            <Route path=\"/Contact\" component={Contact} />\r\n          </Switch>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport NavBar from './layout/NavBar';\nimport Projects from './layout/Projects';\n\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <header><NavBar /></header>\n      <footer></footer>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst app = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));"],"sourceRoot":""}