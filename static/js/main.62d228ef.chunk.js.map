{"version":3,"sources":["logo.svg","layout/Projects.js","layout/Home.js","layout/GitHub.js","layout/Contact.js","layout/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","className","clasName","href","onClick","src","style","width","Component","Home","Github","state","repos","loading","data","user","stars","script","document","createElement","async","body","appendChild","this","setState","axios","get","process","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","then","res","html_url","avatar_url","textAlign","marginLeft","marginTop","marginRight","following","followers","public_repos","length","alt","alignContent","map","repo","name","language","created_at","split","description","forks","open_issues","watchers","stargazers_count","Math","round","size","Contact","NavBar","backgroundColor","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Nav","Link","as","to","exact","path","component","GitHub","App","Boolean","window","location","hostname","match","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62d228ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport './Projects.css'\n\nexport class Projects extends Component {\n    render() {\n        return (\n            <div className='container'>\n                <article clasName='project'>\n                <h2 className=\"display\">Image Selector.\n                <a href='https://github.com/LeeWannacott/image-selector-opencv-python/blob/master/image_selector_from_video.py'><button className='btn btn-light' onClick=\"www.google.com\">View Source Code.</button></a>\n                    <a href='https://github.com/LeeWannacott/image-selector-opencv-python'><button className='btn btn-light' onClick=\"window.location.href='www.google.com'\">View Github Page.</button></a>\n                </h2>\n                <hr></hr>\n                <p>Speeds up image selection, tagging and bounding boxing of relevant images to then use in machine learning models.</p>\n                <img src='https://raw.githubusercontent.com/LeeWannacott/image-selector-opencv-python/master/Example_of_use.png' style={{ width: '70em' }} className='projectimages'></img>\n                </article>\n\n                <article className='project'>\n                <h2 className=\"display\">Mark-Your-Spreadsheet.\n                <a href='https://github.com/LeeWannacott/MYS-Mark-Your-Spreadsheet'><button className='btn btn-light'>View GitHub Page.</button></a>\n                </h2>\n                <hr></hr>\n                <p>Software that applies conditional highlighting and grades students Excel spreadsheets. </p>\n                <img src='https://raw.githubusercontent.com/LeeWannacott/MYS-Mark-Your-Spreadsheet/master/CompareAllExample.png' style={{ width: '70em' }} className='projectimages'></img>\n                </article>\n\n                <article className='project'>\n                <h2 className=\"display\">Tweet Repair Game.\n                <a href='https://tweet-repair-game.herokuapp.com/'><button className='btn btn-light'>View Live Example.</button></a>\n                    <a href='https://github.com/LeeWannacott/tweet-repair-game-django'><button className='btn btn-light'>View GitHub Page.</button></a>\n                </h2> \n                <hr></hr>\n                <p>Tweet repair game started during Global Game Jam 2020. Uses Django, Javascript and the Twitter API.</p>\n                <img src='https://raw.githubusercontent.com/LeeWannacott/tweet-repair-game-django/master/Picture_of_tweet_repair_game.png' style={{ width: '70em' }} className='projectimages'></img>\n                </article>\n\n                <article className='project'>\n                <h2 className=\"display\"> table-sort-js\n                <a href='https://leewannacott.github.io/Portfolio/#/GitHub'><button className='btn btn-light'>View Live Example.</button></a>\n                    <a href='https://github.com/LeeWannacott/table-sort-js'><button className='btn btn-light'>View GitHub Page.</button></a>\n                    <a href='https://leewannacott.github.io/table-sort-js/table-sort.js'><button className='btn btn-light'>View source code.</button></a>\n                </h2> \n                <hr></hr>\n                <p>A JavaScript client-side HTML table sorting library with no dependencies required. Sorts alpha, dates, numerical in natural order.</p>\n                </article>\n\n            </div >\n        )\n    }\n}\n\nexport default Projects\n","import React, { Component } from \"react\";\nimport Projects from \"./Projects\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <Projects />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { isCompositeComponent } from 'react-dom/test-utils'\nimport './GitHub.css';\n// import $ from 'jquery';\n\n// import './table-sort'\n\nexport class Github extends Component {\n    state = {\n        repos: [],\n        loading: false,\n        data: false,\n        user: [],\n        stars: []\n    }\n\n    componentDidMount() {\n        const script = document.createElement(\"script\");\n        script.src = \"https://leewannacott.github.io/table-sort-js/table-sort.js\";\n        script.async = true;\n        document.body.appendChild(script);\n        \n\n        this.setState({ loading: true })\n        axios.get(`https://api.github.com/users/leewannacott/repos?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n            .then(res => {\n                const repos = res.data;\n                this.setState({ repos })\n            });\n        axios.get(`https://api.github.com/users/leewannacott?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n            .then(res => {\n                const user = res.data;\n                this.setState({ user })\n            });\n        axios.get(`https://api.github.com/users/leewannacott/starred?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n            .then(res => {\n                const stars = res.data;\n                this.setState({ stars })\n            });\n\n    }\n\n    render() {\n\n\n        return (\n\n\n            <div className='container' >\n\n\n         \n                < div className=\"bioInfo\" >\n                    <a href={this.state.user.html_url} className='GitHubIcon'><img src={this.state.user.avatar_url} className='GitHubIcon'></img></a>\n                    <span style={{ textAlign: 'left', marginLeft: '1em', marginTop: ' 0.5em', marginRight: '1em' }}>\n                        <p>\n                            {\"Following: \" + this.state.user.following + \" \"}<br />\n                            {\"Followers: \" + this.state.user.followers + \" \"}<br />\n                            {\"Repositories: \" + this.state.user.public_repos}<br />\n                            {\"Stars: \" + this.state.stars.length + \" \"}</p></span>\n                    <img src=\"http://ghchart.rshah.org/be4eb9/LeeWannacott\" className=\"GitHubChart\" alt=\"Lee Wannacott GitHub chart\"></img>\n                    <a href=\"#\"><img src=\"https://media.xconomy.com/wordpress/wp-content/images/2016/06/06161811/github-logo.jpg\" alt=\"GitHub Icon\" style={{ width: \"8em\", marginTop: '1em', marginLeft: '1em', alignContent: 'flex-end' }} ></img></a>\n\n\n\n                </div>\n\n                <h6 style={{ textAlign: 'left', marginTop: '0.25em' }}>Statistics on public repositories pulled from the GitHub API v3:</h6>\n\n                <table className=\"table-sort\">\n                    <thead>\n                        <tr><th>Repository Name</th>\n                            <th>Language</th>\n                            <th className='order-by-desc'>Created</th>\n                            <th>Description</th>\n                            <th className='order-by-desc'>Forks</th>\n                            <th className='order-by-desc'>Open issues</th>\n                            <th className='order-by-desc'>Watchers</th>\n                            <th className='order-by-desc'>Stars</th>\n                            <th className='order-by-desc'>Size (MB)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.repos.map(repo => (\n\n                                <tr>\n                                    <td><a href={repo.html_url}>{repo.name}</a></td>\n                                    <td>    {repo.language}</td>\n                                    <td>    {repo.created_at.split('-')[0] + '-' + repo.created_at.split('-')[1]}</td>\n                                    <td>    {repo.description}</td>\n                                    <td>    {repo.forks}</td>\n                                    <td>    {repo.open_issues}</td>\n                                    <td>    {repo.watchers}</td>\n                                    <td>    {repo.stargazers_count}</td>\n                                    <td>    {(Math.round(repo.size / 1000))}</td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n\n\n            </div >\n\n        )\n    }\n}\n\nexport default Github\n\n","import React, { Component } from 'react'\nimport './Contact.css'\nimport axios from 'axios';\n\n\n\n\n\nexport class Contact extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         name: '',\n    //         email: '',\n    //         message: ''\n    //     }\n    // }\n\n    // handleSubmit(e) {\n    //     e.preventDefault();\n    //     axios({\n    //         method: \"POST\",\n    //         url: \"http://localhost:3002/send\",\n    //         data: this.state\n    //     }).then((response) => {\n    //         if (response.data.status === 'success') {\n    //             alert(\"Message Sent.\");\n    //             this.resetForm()\n    //         } else if (response.data.status === 'fail') {\n    //             alert(\"Message failed to send.\")\n    //         }\n    //     })\n    // }\n\n    // resetForm() {\n    //     this.setState({ name: '', email: '', message: '' })\n    // }\n\n    render() {\n        return (\n\n            <div className=\"container\">\n                <h6 className='heading'>Email: WannacottL@gmail.com</h6>\n                <hr></hr>\n                <a href=\"https://www.linkedin.com/in/lee-wannacott-64289b174/\" ><img src={process.env.PUBLIC_URL + '/LinkedIn.png'} className=\"contact-images\" style={{ width: \"10em\", marginTop: '0.25em', marginLeft: '1em' }} ></img></a>\n                <a href=\"https://github.com/LeeWannacott\" ><img src={process.env.PUBLIC_URL + '/GithubLogo.jpeg'} className=\"contact-images\" alt=\"https://github.com/LeeWannacott\" style={{ width: \"10em\", marginTop: '0.25em', marginLeft: '0.75em'}} ></img></a>\n                <a href=\"mailto:WannacottL@gmail.com\" ><img src={process.env.PUBLIC_URL + '/Gmail.png'} className=\"contact-images\" alt=\"mailto:WannacottL@gmail.com\" style={{ width: \"8em\", marginTop: '0.25em', marginLeft: '0.1em' ,marginRight:'0.1em'}}></img></a>\n                {/* \n                <h2 className='heading'>Contact via form:</h2><hr></hr>\n\n\n                <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"message\">Message</label>\n                        <textarea className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form> */}\n            </div>\n        );\n    }\n\n    // onNameChange(event) {\n    //     this.setState({ name: event.target.value })\n    // }\n\n    // onEmailChange(event) {\n    //     this.setState({ email: event.target.value })\n    // }\n\n    // onMessageChange(event) {\n    //     this.setState({ message: event.target.value })\n    // }\n\n    // handleSubmit(event) {\n    // }\n}\n\n\nexport default Contact\n\n\n","import React, { Component, useCallback } from 'react'\nimport { Link, Route, NavLink, Switch, match } from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\nimport './Navbar.css';\nimport Home from './Home'\nimport Projects from './Projects';\nimport GitHub from './GitHub';\nimport Contact from './Contact'\n\nexport class NavBar extends Component {\n\n\n  render() {\n    return (\n\n      <div>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-light navbar-expand-xl\" style={{ backgroundColor: \"#e3f2fd\" }}>\n\n            <a className=\"navbar-brand\">Lee Wannacott</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                {/* Navbar items */}\n                <li className=\"nav-item\"><Nav.Link className='Nav-link' as={Link} to=\"/Projects\">\n                  Projects\n              </Nav.Link></li>\n                <li className=\"nav-item\"><Nav.Link className='Nav-link' as={Link} to=\"/GitHub\">\n                  Github Statistics\n              </Nav.Link></li>\n                <li className=\"nav-item\"><Nav.Link className='Nav-link' as={Link} to=\"/Contact\">\n                  Contact\n              </Nav.Link></li>\n\n                <img src='https://cdn.auth0.com/blog/react-js/react.png' className='react-spinner' style={{ width: '3rem', marginLeft: '34rem' }}></img>\n              </ul>\n            </div>\n          </nav>\n        </div>\n        {/* Routing */}\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/Projects\" component={Projects} />\n            <Route path=\"/GitHub\" component={GitHub} />\n            <Route path=\"/Contact\" component={Contact} />\n          </Switch>\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nexport default NavBar\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport NavBar from './layout/NavBar';\nimport Projects from './layout/Projects';\n\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <header><NavBar /></header>\n      <footer></footer>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst app = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));"],"sourceRoot":""}